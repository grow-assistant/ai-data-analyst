# MCP System Configuration
# This file contains all configuration settings for the Multi-Agent Control Plane system

# System Information
system:
  name: "MCP Multi-Agent System"
  version: "2.0.0"
  environment: "development"  # development, staging, production
  
# Logging Configuration
logging:
  level: "INFO"  # DEBUG, INFO, WARNING, ERROR, CRITICAL
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: "logs/mcp_system.log"
  max_size_mb: 100
  backup_count: 5
  console_output: true

# Security Settings
security:
  api_keys:
    mcp_server: "mcp-dev-key"
    default_expiry_hours: 24
  
  rate_limiting:
    enabled: true
    requests_per_minute: 100
    burst_allowance: 20
    auth_requests_per_minute: 10
    
  authentication:
    require_api_key: true
    timing_attack_protection: true
    failed_attempts_threshold: 5
    lockout_duration_minutes: 60
    
  cors:
    enabled: true
    allowed_origins:
      - "http://localhost:*"
      - "http://127.0.0.1:*"
    allowed_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    allowed_headers: ["Content-Type", "Authorization", "X-API-Key"]
    
  headers:
    hsts_max_age: 31536000
    content_security_policy: "default-src 'self'"
    x_frame_options: "DENY"
    x_content_type_options: "nosniff"

# MCP Server Configuration
mcp_server:
  host: "localhost"
  port: 10001
  workers: 1
  max_connections: 100
  timeout_seconds: 30
  
  features:
    health_checks: true
    security_monitoring: true
    metrics_collection: true
    trace_logging: true
    
  paths:
    health: "/health"
    security_status: "/security/status"
    tools: "/tools"
    execute: "/execute"

# Agent Configurations
agents:
  orchestrator:
    name: "Orchestrator Agent"
    host: "localhost"
    port: 10000
    module_path: "orchestrator_agent"
    
    features:
      task_routing: true
      mcp_client: true
      health_monitoring: true
      
    timeouts:
      startup: 30
      health_check: 10
      task_execution: 300
      
    resources:
      max_memory_mb: 512
      max_cpu_percent: 50
      
  data_loader:
    name: "Data Loader Agent"
    host: "localhost"
    port: 10006
    module_path: "data_loader"
    
    features:
      csv_loading: true
      json_loading: true
      tableau_loading: false  # Disabled in current implementation
      cache_management: true
      
    timeouts:
      startup: 30
      health_check: 10
      data_processing: 120
      
    resources:
      max_memory_mb: 1024
      max_cpu_percent: 75
      
    data_limits:
      max_file_size_mb: 100
      max_rows: 1000000
      supported_formats: ["csv", "json"]
      
  data_analyst:
    name: "Data Analyst Agent"
    host: "localhost"
    port: 10007
    module_path: "data_analyst"
    
    features:
      trend_analysis: true
      outlier_detection: true
      metric_calculation: true
      narrative_generation: true
      
    timeouts:
      startup: 30
      health_check: 10
      analysis_execution: 180
      
    resources:
      max_memory_mb: 2048
      max_cpu_percent: 80
      
    analysis_limits:
      max_data_points: 500000
      max_analysis_time_seconds: 300

  data_cleaning:
    name: "Data Cleaning Agent"
    host: "localhost"
    port: 10008
    module_path: "data_cleaning_agent"
    description: "An agent that can clean and preprocess data"
    
    features:
      missing_value_handling: true
      outlier_removal: true
      data_standardization: true
      
    timeouts:
      startup: 30
      health_check: 10
      data_processing: 120
      
    resources:
      max_memory_mb: 1024
      max_cpu_percent: 75

  data_cleaning_tool_server:
    name: "Data Cleaning Tool Server"
    host: "localhost"
    port: 11008
    description: "MCP server hosting data cleaning tools."

  data_enrichment:
    name: "Data Enrichment Agent"
    host: "localhost"
    port: 10009
    module_path: "data_enrichment_agent"
    description: "An agent that can enrich data with external context"
    
    features:
      external_data_fetch: true
      data_merging: true
      moving_averages: true
      
    timeouts:
      startup: 30
      health_check: 10
      data_processing: 180
      
    resources:
      max_memory_mb: 1024
      max_cpu_percent: 75

  presentation:
    name: "Presentation Agent"
    host: "localhost"
    port: 10010
    module_path: "presentation_agent"
    description: "An agent that can create reports and visualizations"
    
    features:
      chart_generation: true
      narrative_generation: true
      html_reports: true
      gemini_ai_support: true
      
    timeouts:
      startup: 30
      health_check: 10
      report_generation: 180
      
    resources:
      max_memory_mb: 1024
      max_cpu_percent: 75

  rootcause_analyst_agent:
    name: "RootCause Analyst Agent"
    host: "localhost" 
    port: 10011
    module_path: "rootcause_analyst"
    description: "AI-powered root cause analysis with Why-Bot"
    enabled: true
    
    features:
      ai_hypothesis_generation: true
      statistical_testing: true
      variance_decomposition: true
      causal_inference: true
      
    timeouts:
      startup: 30
      health_check: 10
      analysis_execution: 300
      
    resources:
      max_memory_mb: 2048
      max_cpu_percent: 80

  schema_profiler_agent:
    name: "Schema Profiler Agent"
    host: "localhost"
    port: 10012
    module_path: "schema_profiler"
    description: "Intelligent data profiling and schema analysis"
    enabled: true
    
    features:
      ai_profiling: true
      schema_comparison: true
      column_statistics: true
      
    timeouts:
      startup: 30
      health_check: 10
      profiling_execution: 120
      
    resources:
      max_memory_mb: 1024
      max_cpu_percent: 70
      
    settings:
      watch_directory: "watched_datasets"
      output_directory: "dataset_profiles"

# Database Configuration (if needed for future enhancements)
database:
  enabled: false
  type: "sqlite"  # sqlite, postgresql, mysql
  connection:
    host: "localhost"
    port: 5432
    database: "mcp_system"
    username: "mcp_user"
    password: "mcp_password"
  
  pool:
    min_connections: 1
    max_connections: 10
    connection_timeout: 30

# Monitoring Configuration
monitoring:
  enabled: true
  
  metrics:
    collection_interval_seconds: 30
    retention_hours: 24
    export_enabled: true
    export_interval_hours: 6
    
  health_checks:
    interval_seconds: 15
    timeout_seconds: 5
    failure_threshold: 3
    
  alerts:
    enabled: false  # Can be enabled for production
    email_recipients: []
    slack_webhook: ""
    
    thresholds:
      cpu_percent: 80
      memory_percent: 85
      response_time_ms: 1000
      error_rate_percent: 5

# Development Settings
development:
  hot_reload: true
  debug_mode: true
  test_data_generation: true
  mock_external_services: false
  
  test_configuration:
    run_integration_tests: true
    test_data_cleanup: true
    performance_benchmarks: false

# Production Settings (overrides for production environment)
production:
  logging:
    level: "WARNING"
    console_output: false
    
  security:
    api_keys:
      mcp_server: "${MCP_API_KEY}"  # Environment variable
      
    rate_limiting:
      requests_per_minute: 1000
      auth_requests_per_minute: 50
      
  mcp_server:
    workers: 4
    max_connections: 500
    
  monitoring:
    alerts:
      enabled: true
      
  development:
    hot_reload: false
    debug_mode: false

# Deployment Configuration
deployment:
  strategy: "standalone"  # standalone, docker, kubernetes
  
  docker:
    base_image: "python:3.11-slim"
    requirements_file: "requirements.txt"
    exposed_ports: [10000, 10001, 10006, 10007]
    
  kubernetes:
    namespace: "mcp-system"
    replicas: 1
    resource_requests:
      cpu: "100m"
      memory: "256Mi"
    resource_limits:
      cpu: "500m"
      memory: "1Gi"
      
# External Integrations
integrations:
  google_api:
    enabled: true
    api_key: "${GOOGLE_API_KEY}"
    timeout_seconds: 30
    
  openai_api:
    enabled: false
    api_key: "${OPENAI_API_KEY}"
    model: "gpt-4"
    
  tableau_server:
    enabled: false
    server_url: ""
    username: ""
    password: ""

# Feature Flags
features:
  experimental_analysis: false
  advanced_security: true
  performance_optimization: true
  multi_tenant_support: false
  cloud_deployment: false 